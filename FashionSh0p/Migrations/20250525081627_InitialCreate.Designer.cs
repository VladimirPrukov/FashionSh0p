// <auto-generated />
using System;
using FashionWave.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FashionWave.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250525081627_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Дамско Облекло"
                        });
                });

            modelBuilder.Entity("Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Черен"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Червен"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Бял"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Розов"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Син"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Бежов"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Сив"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Лилав"
                        });
                });

            modelBuilder.Entity("FashionWave.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FashionWave.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "NUCOMO",
                            CategoryId = 1,
                            Description = "Дамска рокля на марката NUMOCO.\r\n- V-образно деколте\r\n- връзване на талията\r\n- изработени от топъл пуловерен материал\r\nМоделът на снимката е висок 165 см и носи размер UNI (XS-2XL).\r\nМатериал: 100% акрил",
                            ImageUrl = "https://i.factcool.com/cache2/1400x1400/catalog/products/60/b4/b8/60-b4-b884d8c3497-1-dwukolorowa-sukienka-z-15611.jpg",
                            Price = 89.989999999999995,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "NUCOMO",
                            CategoryId = 1,
                            Description = "Дамска рокля на марката NUMOCO.\r\n- V-образно деколте\r\n- връзване на талията\r\n- изработени от топъл пуловерен материал\r\nМоделът на снимката е висок 165 см и носи размер UNI (XS-2XL).\r\nМатериал: 100% акрил",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/87/f6/60-87-f6694719507-1-azurowa-sweterkowa-suki-15712.jpg",
                            Price = 72.989999999999995,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "TRENDYOL",
                            CategoryId = 1,
                            Description = "Информация за модела: Измервания на модела: Височина: 180 см (5'11'') Бюст: 80 см (31 инча) Талия: 60 см (23 инча) Ханш: 89 см (35 инча);\r\nПродуктът върху манекена е с размер S/36/8;\r\nДължина на модела отпред: 125 см\r\n\r\nСъстав на материала: 100% акрил; Плетива",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/85/ae/11-85-ae72cc6c1_org_zoom.jpg",
                            Price = 53.990000000000002,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "TRENDYOL",
                            CategoryId = 1,
                            Description = "Дамска рокля Trendyol.\r\n- оребрена материя\r\n- удобна кройка\r\n- водолазка\r\nРазмери на модела: Височина: 173 см, Бюст: 79 см, Талия: 60 см, Ханш: 90 см.\r\nПродуктът на модела е с размер S/36.\r\nМатериал: 100% акрил",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/45/22/11-45-2248bc251_org_zoom.jpg",
                            Price = 25.989999999999998,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "TRENDYOL",
                            CategoryId = 1,
                            Description = "Дамска рокля Trendyol.\r\n- оребрена материя\r\n- обло деколте\r\n- дължина: 80 см\r\n- леко скъсано на долнището и ръкавите\r\nПродуктът на модела е с размер S/36.\r\nМатериал: 100% акрил",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/31/ae/11-31-aee46a262_org_zoom.jpg",
                            Price = 23.989999999999998,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 6,
                            BrandName = "TRENDYOL",
                            CategoryId = 1,
                            Description = "Дамска рокля Trendyol.\r\n- оребрена материя\r\n- обло деколте\r\n- дължинаИнформация за модела: Измервания на модела: Височина: 180 см (5'11'') Бюст: 80 см (31 инча) Талия: 60 см (23 инча) Ханш: 89 см (35 инча);\r\nПродуктът върху манекена е с размер S/36/8;\r\nДължина на модела отпред: 125 см\r\n\r\nСъстав на материала: 100% акрил; Плетива",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/fc/c9/11-fc-c9eed5581_org_zoom.jpg",
                            Price = 53.990000000000002,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 7,
                            BrandName = "BeWear B083",
                            CategoryId = 1,
                            Description = "- удобна кройка\r\n\r\n- 3/4 ръкав\r\n\r\n- преден джоб\r\n\r\nМатериал: 90% памук 10% еластан",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/14/03/24/14-03-24b083_royalblue_1b.jpg",
                            Price = 145.99000000000001,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 8,
                            BrandName = "TRENDYOL",
                            CategoryId = 1,
                            Description = "70% акрил 30% полиестер",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/71/f6/11-71-f6c80b436_org_zoom.jpg",
                            Price = 54.990000000000002,
                            ProductName = "Плетени рокли",
                            ProductType = "Рокли"
                        },
                        new
                        {
                            Id = 9,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/81/b2/15-81-b2a2e379bg_FN63_03.jpg",
                            Price = 6.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 10,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/b3/06/15-b3-06f26515bg_FN63_01.jpg",
                            Price = 5.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 11,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/1e/2f/15-1e-2f16b42ebg_FN63_28.jpg",
                            Price = 6.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 12,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/4f/9c/15-4f-9c545530bg_FN63_05.jpg",
                            Price = 6.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 13,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/79/d4/15-79-d405a42abg_FN63_39.jpg",
                            Price = 6.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 14,
                            BrandName = "FRUIT OF THE LOOM FN63•Ladies Iconic Tee",
                            CategoryId = 1,
                            Description = "Women's T-Shirt | Short sleeves Product features: • 100% cotton • round neckline • short sleeve • ribbed knit hem of the neckline • tapered cut",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/c1/88/15-c1-885717c9bg_FN63_15.jpg",
                            Price = 6.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 15,
                            BrandName = "FRUIT OF THE LOOM FU78•Lady-Fit Valueweight Tee",
                            CategoryId = 1,
                            Description = "Product features: • 100% cotton • round neckline with ribbed hemming cotton/Lycra • reinforcing band at the neck • side seams",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/7e/c3/15-7e-c377b79ebg_FU78_01.jpg",
                            Price = 7.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        },
                        new
                        {
                            Id = 16,
                            BrandName = "Дамска тениска B&C Basic",
                            CategoryId = 1,
                            Description = "Дамска тениска с кръгло деколте\r\nМатериал: 100% памукк",
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/5f/72/15-5f-721bf5acbg_B54E_36.jpg",
                            Price = 7.9900000000000002,
                            ProductName = "С къс ръкав",
                            ProductType = "Блузи"
                        });
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://i.factcool.com/cache2/1400x1400/catalog/products/60/f4/b8/60-f4-b8e49ba4497-1-dwukolorowa-sukienka-z-15616.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://i.factcool.com/cache2/1400x1400/catalog/products/60/86/80/60-86-80395f09497-1-dwukolorowa-sukienka-z-15613.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://i.factcool.com/cache2/1400x1400/catalog/products/60/15/13/60-15-134c0ee8497-1-dwukolorowa-sukienka-z-15614.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/a5/e4/60-a5-e4374393497-1-dwukolorowa-sukienka-z-15612.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/88/ce/60-88-ce55abd6497-1-dwukolorowa-sukienka-z-15615.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/c8/36/60-c8-363f099b507-1-azurowa-sweterkowa-suki-15713.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/a4/d5/60-a4-d569035d507-1-azurowa-sweterkowa-suki-15716.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/58/83/60-58-834da908507-1-azurowa-sweterkowa-suki-15717.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/a7/4f/60-a7-4f58987e507-1-azurowa-sweterkowa-suki-15715.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/60/37/44/60-37-44418a78507-1-azurowa-sweterkowa-suki-15711.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://i.factcool.com/cachhttps://i.factcool.com/cache2/800x800/catalog/products/11/de/40/11-de-4068a6c71_org_zoom.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/4f/d6/11-4f-d6450bb01_org_zoom.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/25/8f/11-25-8f84079d1_org_zoom.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/06/ac/11-06-ac0272761_org_zoom.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/e5/53/11-e5-5394610a1_org_zoom.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/8a/9f/11-8a-9f956f4f2_org_zoom.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 17,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/19/6a/11-19-6af334bd4_org_zoom.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 18,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/24/e4/11-24-e4a72e355_org_zoom.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 19,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/c5/12/11-c5-12d40d767_org_zoom.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 20,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/41/fa/11-41-fa3f11351_org_zoom.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 21,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/ac/df/11-ac-df4cc6f56_org_zoom.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 22,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/13/1d/11-13-1de87ed18_org_zoom.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 23,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/79/7e/11-79-7e40acf82_org_zoom.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 24,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/e7/3b/11-e7-3b474ecf10_org_zoom.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 25,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/b9/ff/11-b9-ffbb28f31_org_zoom.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 26,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/b7/93/11-b7-93ecb7171_org_zoom.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 27,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/1f/1a/11-1f-1a5d4ba81_org_zoom.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 28,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/6e/54/11-6e-54ce6d341_org_zoom.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 29,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/7d/b9/11-7d-b9786c621_org_zoom.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 30,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/bd/94/11-bd-94fd928f1_org_zoom.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 31,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/14/f8/cd/14-f8-cdb083_royalblue_2b.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 32,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/14/f8/cd/14-f8-cdb083_royalblue_2b.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 33,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/b2/0a/11-b2-0ade54c32_org_zoom.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 34,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/1f/1a/11-1f-1a5d4ba81_org_zoom.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 35,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/fc/39/11-fc-3910fb854_org_zoom.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 36,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/7b/6c/11-7b-6ceafb4b7_org_zoom.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 37,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/11/d4/f4/11-d4-f456bd348_org_zoom.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 38,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/1f/64/15-1f-64109980bg_FN63_03_B.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 39,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/34/da/15-34-da177255bg_FN63_03_S.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 40,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/7f/ca/15-7f-cad38d7cbg_FN63_01_B.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 41,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/84/83/15-84-8379af09bg_FN63_01_S.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 42,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/b8/68/15-b8-6831513abg_FN63_28_B.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 43,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/53/d9/15-53-d920198cbg_FN63_28_S.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 44,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/13/31/15-13-3103e0d7bg_FN63_05_B.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 45,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/d8/24/15-d8-242c1f8dbg_FN63_05_S.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 46,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/52/9d/15-52-9d6fc0d2bg_FN63_39_B.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 47,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/e7/52/15-e7-521341e5bg_FN63_39_S.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 48,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/18/06/15-18-068585c6bg_FN63_15_B.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 49,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/70/ab/15-70-ab87e41cbg_FN63_15_S.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 50,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/9a/a1/15-9a-a1cee339bg_FU78_01_B.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 51,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/d4/11/15-d4-11b38613bg_FU78_01_S.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 52,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/01/45/15-01-45a014b3bg_B54E_36_B.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 53,
                            ImageUrl = "https://i.factcool.com/cache2/800x800/catalog/products/15/07/6e/15-07-6ef736f8bg_B54E_36_S.jpg",
                            ProductId = 16
                        });
                });

            modelBuilder.Entity("ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductVariants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            ProductId = 1,
                            SizeId = 1,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 3,
                            ProductId = 2,
                            SizeId = 2,
                            Stock = 8
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 3,
                            ProductId = 3,
                            SizeId = 3,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            ColorId = 2,
                            ProductId = 4,
                            SizeId = 4,
                            Stock = 10
                        },
                        new
                        {
                            Id = 5,
                            ColorId = 6,
                            ProductId = 5,
                            SizeId = 3,
                            Stock = 5
                        },
                        new
                        {
                            Id = 6,
                            ColorId = 2,
                            ProductId = 6,
                            SizeId = 2,
                            Stock = 7
                        },
                        new
                        {
                            Id = 7,
                            ColorId = 5,
                            ProductId = 7,
                            SizeId = 1,
                            Stock = 9
                        },
                        new
                        {
                            Id = 8,
                            ColorId = 6,
                            ProductId = 8,
                            SizeId = 3,
                            Stock = 9
                        },
                        new
                        {
                            Id = 9,
                            ColorId = 1,
                            ProductId = 9,
                            SizeId = 4,
                            Stock = 2
                        },
                        new
                        {
                            Id = 10,
                            ColorId = 3,
                            ProductId = 10,
                            SizeId = 2,
                            Stock = 5
                        },
                        new
                        {
                            Id = 11,
                            ColorId = 4,
                            ProductId = 11,
                            SizeId = 3,
                            Stock = 3
                        },
                        new
                        {
                            Id = 12,
                            ColorId = 2,
                            ProductId = 12,
                            SizeId = 3,
                            Stock = 6
                        },
                        new
                        {
                            Id = 13,
                            ColorId = 8,
                            ProductId = 13,
                            SizeId = 1,
                            Stock = 2
                        },
                        new
                        {
                            Id = 14,
                            ColorId = 3,
                            ProductId = 14,
                            SizeId = 1,
                            Stock = 6
                        },
                        new
                        {
                            Id = 15,
                            ColorId = 3,
                            ProductId = 15,
                            SizeId = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 16,
                            ColorId = 8,
                            ProductId = 16,
                            SizeId = 1,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "S"
                        },
                        new
                        {
                            Id = 2,
                            Name = "M"
                        },
                        new
                        {
                            Id = 3,
                            Name = "L"
                        },
                        new
                        {
                            Id = 4,
                            Name = "XL"
                        });
                });

            modelBuilder.Entity("FashionWave.Entities.OrderItem", b =>
                {
                    b.HasOne("FashionWave.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductImage", b =>
                {
                    b.HasOne("Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductVariant", b =>
                {
                    b.HasOne("Color", "Color")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Size", "Size")
                        .WithMany("ProductVariants")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Color", b =>
                {
                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("FashionWave.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("Size", b =>
                {
                    b.Navigation("ProductVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
